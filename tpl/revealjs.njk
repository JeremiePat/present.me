<!DOCTYPE html>
{% if lang -%}
<html lang="{{ lang }}"{% if options.rtl %} dir="rtl"{% endif %}>
{% endif -%}
<meta charset="utf-8">
<title>{{ title }}</title>

{% if description -%}
<meta name="description" content="{{ description }}">
{% endif -%}
{% for author in authors | toArray -%}
<meta name="author" content="{{Â author }}">
{% endfor -%}

<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<link rel="stylesheet" href="reveal.js/css/reset.css">
<link rel="stylesheet" href="reveal.js/css/reveal.css">
{% if (theme) -%}
<link rel="stylesheet" href="reveal.js/css/theme/{{ theme }}.css">
{% endif -%}

{% if (highlight) -%}
<!-- Theme used for syntax highlighting of code -->
<link rel="stylesheet" href="reveal.js/lib/css/{{ highlight }}.css">
{% endif -%}

{% for stylesheet in css -%}
  <link rel="stylesheet" href="theme/{{ stylesheet }}">
{% endfor -%}

<!-- Printing and PDF exports -->
<script>
  var link = document.createElement( 'link' );
  link.rel = 'stylesheet';
  link.type = 'text/css';
  link.href = window.location.search.match( /print-pdf/gi ) ? 'reveal.js/css/print/pdf.css' : 'reveal.js/css/print/paper.css';
  document.getElementsByTagName( 'head' )[0].appendChild( link );
</script>

<div class="reveal">
  <div class="slides">
    {% for file in files -%}
      <section data-markdown>
        <textarea data-template>
          {% include file %}
        </textarea>
      </section>
    {% endfor -%}
  </div>
</div>

<script src="reveal.js/js/reveal.js"></script>
<script>
  {# More info https://github.com/hakimel/reveal.js#configuration -#}
  Reveal.initialize({
    {% for key, value in options -%}
    {{ key }}: {{ value | opt(key) }},
    {% endfor -%}

    {# More info https://github.com/hakimel/reveal.js#dependencies -#}
    dependencies: [
      { src: 'reveal.js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'reveal.js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'reveal.js/plugin/highlight/highlight.js', async: true },
      { src: 'reveal.js/plugin/search/search.js', async: true },
      { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true },
      { src: 'reveal.js/plugin/notes/notes.js', async: true }
    ]
  });
</script>
